{"ast":null,"code":"var _jsxFileName = \"/Users/thomaspaulino/Desktop/pokemon/src/EvolutionChain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = _ref => {\n  _s();\n  let {\n    pokemonList,\n    onMouseClick\n  } = _ref;\n  const [data, setData] = useState([]);\n  const apiGet = async pokemon => {\n    const response = await fetch(pokemon[0].species.url);\n    const data = await response.json();\n    const resEvolution = await fetch(data.evolution_chain.url);\n    const dataEvolution = await resEvolution.json();\n    let pokemonEvoChain = [];\n    function chainDepth(evo) {\n      const evolutionPokemon = {};\n      evolutionPokemon['name'] = evo.species.name;\n      const url = evo.species.url;\n      const pokemonId = url.slice(42, -1);\n      evolutionPokemon.id = Number(pokemonId);\n      pokemonEvoChain.push(evolutionPokemon);\n      let evoChain = evo;\n      let nextChain = evoChain.evolves_to;\n      if (nextChain.length > 0) {\n        chainDepth(nextChain[0]);\n      }\n    }\n    chainDepth(dataEvolution.chain);\n    setData(pokemonEvoChain);\n  };\n  useEffect(() => {\n    apiGet(pokemonList);\n  }, [pokemonList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(pokemon => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: pokemon.name,\n        id: pokemon.id,\n        onMouseClick: onMouseClick\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(EvolutionChain, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","EvolutionChain","_ref","_s","pokemonList","onMouseClick","data","setData","apiGet","pokemon","response","fetch","species","url","json","resEvolution","evolution_chain","dataEvolution","pokemonEvoChain","chainDepth","evo","evolutionPokemon","name","pokemonId","slice","id","Number","push","evoChain","nextChain","evolves_to","length","chain","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thomaspaulino/Desktop/pokemon/src/EvolutionChain.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Card from './Card';\n\n\n\nconst EvolutionChain = ({pokemonList, onMouseClick}) => {\n\n    const [data, setData] = useState([])\n\n    const apiGet = async (pokemon) => {\n        const response = await fetch(pokemon[0].species.url);\n        const data = await response.json();\n        const resEvolution = await fetch(data.evolution_chain.url);\n        const dataEvolution = await resEvolution.json();\n                        let pokemonEvoChain = [];    \n                        function chainDepth(evo) {\n                            const evolutionPokemon = {};\n    \n                            evolutionPokemon['name'] = evo.species.name;\n                            const url = evo.species.url\n                            const pokemonId = url.slice(42, -1)\n                            evolutionPokemon.id = Number(pokemonId)\n                            pokemonEvoChain.push(evolutionPokemon)\n                            \n    \n                            let evoChain = evo;\n                            let nextChain = evoChain.evolves_to;\n                            if (nextChain.length > 0) {\n                                chainDepth(nextChain[0]);\n                            }\n                        }\n                        chainDepth(dataEvolution.chain);\n                        setData(pokemonEvoChain);\n\n    };\n    useEffect(() => {\n        apiGet(pokemonList);\n    }, [pokemonList])\n\n    return (\n        <div>\n            {\n                data.map(pokemon => {\n                    return(\n                        <Card key={pokemon.id} name={pokemon.name} id={pokemon.id} onMouseClick={onMouseClick}/>\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default EvolutionChain;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,cAAc,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAACC,WAAW;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAE/C,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,MAAM,GAAG,MAAOC,OAAO,IAAK;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,OAAO,CAACC,GAAG,CAAC;IACpD,MAAMP,IAAI,GAAG,MAAMI,QAAQ,CAACI,IAAI,EAAE;IAClC,MAAMC,YAAY,GAAG,MAAMJ,KAAK,CAACL,IAAI,CAACU,eAAe,CAACH,GAAG,CAAC;IAC1D,MAAMI,aAAa,GAAG,MAAMF,YAAY,CAACD,IAAI,EAAE;IAC/B,IAAII,eAAe,GAAG,EAAE;IACxB,SAASC,UAAUA,CAACC,GAAG,EAAE;MACrB,MAAMC,gBAAgB,GAAG,CAAC,CAAC;MAE3BA,gBAAgB,CAAC,MAAM,CAAC,GAAGD,GAAG,CAACR,OAAO,CAACU,IAAI;MAC3C,MAAMT,GAAG,GAAGO,GAAG,CAACR,OAAO,CAACC,GAAG;MAC3B,MAAMU,SAAS,GAAGV,GAAG,CAACW,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACnCH,gBAAgB,CAACI,EAAE,GAAGC,MAAM,CAACH,SAAS,CAAC;MACvCL,eAAe,CAACS,IAAI,CAACN,gBAAgB,CAAC;MAGtC,IAAIO,QAAQ,GAAGR,GAAG;MAClB,IAAIS,SAAS,GAAGD,QAAQ,CAACE,UAAU;MACnC,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;QACtBZ,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;MAC5B;IACJ;IACAV,UAAU,CAACF,aAAa,CAACe,KAAK,CAAC;IAC/BzB,OAAO,CAACW,eAAe,CAAC;EAE5C,CAAC;EACDrB,SAAS,CAAC,MAAM;IACZW,MAAM,CAACJ,WAAW,CAAC;EACvB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAiC,QAAA,EAEQ3B,IAAI,CAAC4B,GAAG,CAACzB,OAAO,IAAI;MAChB,oBACIT,OAAA,CAACF,IAAI;QAAkBwB,IAAI,EAAEb,OAAO,CAACa,IAAK;QAACG,EAAE,EAAEhB,OAAO,CAACgB,EAAG;QAACpB,YAAY,EAAEA;MAAa,GAA3EI,OAAO,CAACgB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAmE;IAEhG,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEd,CAAC;AAACnC,EAAA,CA7CIF,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}