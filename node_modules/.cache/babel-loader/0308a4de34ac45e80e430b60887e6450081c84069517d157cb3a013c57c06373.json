{"ast":null,"code":"var _jsxFileName = \"/Users/thomaspaulino/Desktop/pokemon/src/EvolutionChain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvolutionChain = _ref => {\n  _s();\n  let {\n    pokemonList,\n    onItemClick\n  } = _ref;\n  const [pokemonData, setData] = useState([]);\n  const apiGet = async pokemon => {\n    try {\n      const resEvolution = await fetch(pokemon[0].evolution_chain.url);\n      const dataEvolution = await resEvolution.json();\n      console.log(\"evochainurl\", dataEvolution);\n      let pokemonEvoChain = [];\n      let i = 1;\n      function chainDepth(evo) {\n        const evolutionPokemon = {};\n        console.log(i);\n        i++;\n        evolutionPokemon.name = evo.species.name;\n        const url = evo.species.url;\n        const pokemonId = url.slice(42, -1);\n        evolutionPokemon.id = parseInt(pokemonId);\n        pokemonEvoChain.push(evolutionPokemon);\n        const nextChain = evo.evolves_to;\n        if (nextChain.length > 0) {\n          chainDepth(nextChain[0]);\n        }\n      }\n      chainDepth(dataEvolution.chain);\n      setData(pokemonEvoChain);\n    } catch (err) {\n      console.log(\"Error. Please try again.\");\n    }\n  };\n  useEffect(() => {\n    apiGet(pokemonList);\n  }, [pokemonList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pokemonData.map(pokemon => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        name: pokemon.name,\n        id: pokemon.id,\n        onItemClick: onItemClick\n      }, pokemon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(EvolutionChain, \"GURtl8Fk3NAQStZA6Pxqqen+Uf8=\");\n_c = EvolutionChain;\nexport default EvolutionChain;\nvar _c;\n$RefreshReg$(_c, \"EvolutionChain\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","EvolutionChain","_ref","_s","pokemonList","onItemClick","pokemonData","setData","apiGet","pokemon","resEvolution","fetch","evolution_chain","url","dataEvolution","json","console","log","pokemonEvoChain","i","chainDepth","evo","evolutionPokemon","name","species","pokemonId","slice","id","parseInt","push","nextChain","evolves_to","length","chain","err","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thomaspaulino/Desktop/pokemon/src/EvolutionChain.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Card from './Card';\n\nconst EvolutionChain = ({pokemonList, onItemClick}) => {\n\n    const [pokemonData, setData] = useState([])\n\n    const apiGet = async (pokemon) => {\n        try{\n            const resEvolution = await fetch(pokemon[0].evolution_chain.url);\n            const dataEvolution = await resEvolution.json();\n            console.log(\"evochainurl\", dataEvolution)\n            let pokemonEvoChain = []; \n            let i = 1;\n            function chainDepth(evo) {\n                const evolutionPokemon = {};\n                \n                console.log(i);\n                i++;\n\n                evolutionPokemon.name = evo.species.name;\n                const url = evo.species.url\n                const pokemonId = url.slice(42, -1)\n                evolutionPokemon.id = parseInt(pokemonId)\n                pokemonEvoChain.push(evolutionPokemon)\n                \n                const nextChain = evo.evolves_to;\n                if (nextChain.length > 0) {\n                    chainDepth(nextChain[0]);\n                }\n            }\n            chainDepth(dataEvolution.chain);\n            setData(pokemonEvoChain);\n\n        } catch(err) {\n            console.log(\"Error. Please try again.\")\n        }\n    };\n\n    useEffect(() => {\n        apiGet(pokemonList);\n    }, [pokemonList])\n\n    return (\n        <div>\n            {\n                pokemonData.map(pokemon => {\n                    return(\n                        <Card key={pokemon.id} name={pokemon.name} id={pokemon.id} onItemClick={onItemClick}/>\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default EvolutionChain;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAACC,WAAW;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAE9C,MAAM,CAACI,WAAW,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMY,MAAM,GAAG,MAAOC,OAAO,IAAK;IAC9B,IAAG;MACC,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,eAAe,CAACC,GAAG,CAAC;MAChE,MAAMC,aAAa,GAAG,MAAMJ,YAAY,CAACK,IAAI,EAAE;MAC/CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,aAAa,CAAC;MACzC,IAAII,eAAe,GAAG,EAAE;MACxB,IAAIC,CAAC,GAAG,CAAC;MACT,SAASC,UAAUA,CAACC,GAAG,EAAE;QACrB,MAAMC,gBAAgB,GAAG,CAAC,CAAC;QAE3BN,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;QACdA,CAAC,EAAE;QAEHG,gBAAgB,CAACC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAACD,IAAI;QACxC,MAAMV,GAAG,GAAGQ,GAAG,CAACG,OAAO,CAACX,GAAG;QAC3B,MAAMY,SAAS,GAAGZ,GAAG,CAACa,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACnCJ,gBAAgB,CAACK,EAAE,GAAGC,QAAQ,CAACH,SAAS,CAAC;QACzCP,eAAe,CAACW,IAAI,CAACP,gBAAgB,CAAC;QAEtC,MAAMQ,SAAS,GAAGT,GAAG,CAACU,UAAU;QAChC,IAAID,SAAS,CAACE,MAAM,GAAG,CAAC,EAAE;UACtBZ,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5B;MACJ;MACAV,UAAU,CAACN,aAAa,CAACmB,KAAK,CAAC;MAC/B1B,OAAO,CAACW,eAAe,CAAC;IAE5B,CAAC,CAAC,OAAMgB,GAAG,EAAE;MACTlB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3C;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZW,MAAM,CAACJ,WAAW,CAAC;EACvB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACIJ,OAAA;IAAAmC,QAAA,EAEQ7B,WAAW,CAAC8B,GAAG,CAAC3B,OAAO,IAAI;MACvB,oBACIT,OAAA,CAACF,IAAI;QAAkByB,IAAI,EAAEd,OAAO,CAACc,IAAK;QAACI,EAAE,EAAElB,OAAO,CAACkB,EAAG;QAACtB,WAAW,EAAEA;MAAY,GAAzEI,OAAO,CAACkB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAiE;IAE9F,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEd,CAAC;AAACrC,EAAA,CAnDIF,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}